buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'}

repositories {
    mavenCentral()
}

ext {
    allureVersion = "2.13.7"
    selenideVersion = "5.16.2"
    junitVersion = "5.7.0"
}

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true

    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation "org.aspectj:aspectjweaver:1.9.5"
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    testImplementation "io.qameta.allure:allure-selenide:${allureVersion}"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    compile'org.aeonbits.owner:owner:1.0.12'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
// Подключаем зависимость для телеграм бота
    compile group: 'org.knowm.xchart', name: 'xchart', version: '3.5.2'
    compile group: 'org.telegram', name: 'telegrambots', version: '4.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    systemProperties = System.properties
}
test {
    systemProperty "chromeoptions.args","--disable-notifications" //увидомления выкл
    useJUnitPlatform()
}
// Подключаем зависимость для телеграм бота
jar {
    manifest {
        attributes(
                'Main-Class': 'piechart.telegram.PieChartToTelegram'
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}





